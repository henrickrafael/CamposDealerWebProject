@model string

@{
    bool isTipoVenda = !Model.Equals(TipoModel.Clientes.ToString()) && !Model.Equals(TipoModel.Produtos.ToString());

    string nomeMetodoJs = string.Concat("retornarConsulta", Model, "()");
    string placeHolder = Model.Equals(TipoModel.Clientes.ToString()) ? "Nome do cliente" : "Descrição do produto";
    
    placeHolder = isTipoVenda ? "Consultar venda por:" : placeHolder;
}

<button class="btn btn-primary mt-2 d-inline" data-bs-toggle="collapse" href="#collapse-@Model" aria-expanded="false" aria-controls="collapse-@Model">
    Pesquisar
</button>
<div class="collapse mt-2" id="collapse-@Model">
    <form>
        <div class="input-group">
            <input type="search" id="search-parameter-@Model" class="form-control" placeholder="@placeHolder">
            @if (isTipoVenda)
            {
                <select id="tipo-consulta-ddl" onchange="setDropDownValue(this)" class="form-select form-select-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    <option value="" selected>Selecione</option>
                    <option value="@TipoModel.Clientes" class="form-select">Nome do cliente</option>
                    <option value="@TipoModel.Produtos" class="form-select">Descrição do produto</option>
                </select>
            }
            <button onclick="@nomeMetodoJs" class="btn btn-outline-primary" type="button">
                <img class="icon-prop" src="~/images/search_strong_icon.png" />
            </button>
            <button onclick="resetAll()" class="btn btn-outline-danger" type="button">
                <img class="icon-prop" src="~/images/close_icon.png" />
            </button>
        </div>
        <input type="reset" hidden class="btn btn-primary reset-fields">
    </form>
</div>